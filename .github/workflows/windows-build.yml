name: 'windows-build'
on:
  push:
    tags:
      - 'v*'
      - 'test*'
jobs:
  create-release:
    name: Create Windows asset
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Install Racket
        uses: Bogdanp/setup-racket@v1.11
        with:
          architecture: 'x64'
          distribution: 'full'
          version: 'stable'
      - name: Set variables
        id: vars
        shell: bash
        run: |
          echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "racket-version=$(racket --version)" >> $GITHUB_OUTPUT
          echo "tag=$(git describe --tags)" >> $GITHUB_OUTPUT
          echo "draft=$(git describe --tags | sed -e 's/^test.*/true/;s/^v.*/false/')" >> $GITHUB_OUTPUT
      - name: Cache Racket dependencies
        uses: actions/cache@v3
        with:
          path: \Windows\Temp
          key: ${{ runner.os }}-racket-${{ steps.vars.outputs.racket-version }}
      - name: Install dependencies
        run:  |
          echo "installing dependencies"
          raco pkg install --auto --batch --no-docs --skip-installed \
               sweet-exp-lib threading-lib brag-lib br-parser-tools \
               sxml html-template html-parsing \
               typed-graph
      - name: (Re)install knotty from source
        run:  |
          pkgs=$(raco pkg show | grep '^ [^[]' | grep -v '^ Package' | cut -d ' ' -f2)
          echo "packages:" $pkgs
          if [ $(echo $pkgs | grep -cw knotty-lib) -gt 0 ]
          then
            echo "updating knotty-lib"
            raco pkg update --auto --batch --no-docs --force --type dir knotty-lib
          else
            echo "installing knotty-lib"
            raco pkg install --auto --batch --no-docs --force --type dir knotty-lib
          fi
          if [ $(echo $pkgs | grep -cw knotty) -gt 0 ]
          then
            echo "updating knotty"
            raco pkg update --auto --batch --no-docs --force --type dir knotty
          else
            echo "installing knotty"
            raco pkg install --auto --batch --no-docs --force --type dir knotty
          fi
      - name: Set knotty VERSION
        shell: bash
        run:  |
          sed -i 's/KNOTTY-VERSION/${{steps.vars.outputs.tag}}/' knotty-lib/global.rkt
          sed -i 's/KNOTTY-VERSION/${{steps.vars.outputs.tag}}/' knotty-lib/cli.rkt
      - name: Create executable
        shell: bash
        run:  |
          dir="knotty-${{ steps.vars.outputs.tag }}-win"
          mkdir -p build/windows
          cd build/windows
          raco exe -v -o knotty.exe ../../knotty-lib/cli.rkt
          raco distribute $dir knotty.exe
          cd ../..
      - name:  Zip folder
        shell: pwsh
        run:   |
          Set-Variable dir "knotty-${{ steps.vars.outputs.tag }}-win"
          Set-Variable zip "$dir.zip"
          Compress-Archive -Path build/windows/$dir -DestinationPath build/windows/$zip
      - name: Archive asset
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: build/windows/knotty-${{ steps.vars.outputs.tag }}-win.zip

  upload-release:
    name: Upload Windows asset
    needs: create-release
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Set variables
        id: vars
        shell: bash
        run: |
          echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "racket-version=$(racket --version)" >> $GITHUB_OUTPUT
          echo "tag=$(git describe --tags)" >> $GITHUB_OUTPUT
          echo "draft=$(git describe --tags | sed -e 's/^test.*/true/;s/^v.*/false/')" >> $GITHUB_OUTPUT
      - name: Download asset
        uses: actions/download-artifact@v3
        with:
          name: windows-build
      - name: Upload asset
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.vars.outputs.tag }}
          body: ""  # release message, alternative to body_path
          draft: ${{ steps.vars.outputs.draft }}
          prerelease: false
          allowUpdates: true
          artifacts: knotty-${{ steps.vars.outputs.tag }}-win.zip
          artifactContentType: executable
          replacesArtifacts: true
