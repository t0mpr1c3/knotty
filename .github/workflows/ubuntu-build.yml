name: 'ubuntu-build'
on:
  push:
    tags:
      - 'v*'
      - 'test*'

jobs:
  create-release:
    name: Create Ubuntu asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Install Racket
        uses: Bogdanp/setup-racket@v1.11
        with:
          architecture: 'x64'
          distribution: 'full'
          version: 'stable'
      - name: Set variables
        id: vars
        run: |
          echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "racket-version=$(racket --version)" >> $GITHUB_OUTPUT
          echo "tag=$(git describe --tags)" >> $GITHUB_OUTPUT
          echo "draft=$(git describe --tags | sed -e 's/^test.*/true/;s/^v.*/false/')" >> $GITHUB_OUTPUT
      - name: Cache Racket dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/racket
            ~/.local/share/racket
          key: ${{ runner.os }}-racket-${{ steps.vars.outputs.racket-version }}
      - name: Install dependencies
        run:  |
          echo "installing dependencies"
          raco pkg install --auto --batch --no-docs --skip-installed \
               sweet-exp-lib threading-lib brag-lib br-parser-tools \
               sxml html-template html-parsing \
               typed-graph
      - name: (Re)install knotty from source
        run:  |
          pkgs=$(raco pkg show | grep '^ [^[]' | grep -v '^ Package' | cut -d ' ' -f2)
          echo "packages:" $pkgs
          if [ $(echo $pkgs | grep -cw knotty-lib) -gt 0 ]
          then
            echo "updating knotty-lib"
            raco pkg update --auto --batch --no-docs --force --type dir knotty-lib
          else
            echo "installing knotty-lib"
            raco pkg install --auto --batch --no-docs --force --type dir knotty-lib
          fi
          if [ $(echo $pkgs | grep -cw knotty) -gt 0 ]
          then
            echo "updating knotty"
            raco pkg update --auto --batch --no-docs --force --type dir knotty
          else
            echo "installing knotty"
            raco pkg install --auto --batch --no-docs --force --type dir knotty
          fi
      - name: Set knotty VERSION
        run:  |
          sed -i 's/KNOTTY-VERSION/${{steps.vars.outputs.tag}}/' knotty-lib/global.rkt
          sed -i 's/KNOTTY-VERSION/${{steps.vars.outputs.tag}}/' knotty-lib/cli.rkt
      - name: Create executable
        run:  |
          dir="knotty-${{ steps.vars.outputs.tag }}-amd64"
          mkdir -p build/linux
          cd build/linux
          raco exe -v -o knotty ../../knotty-lib/cli.rkt
          raco distribute $dir knotty
          tar -czvf $dir.tgz $dir
          cd ../..
          #      - name: Create .deb package
          #      - uses: jiro4989/build-deb-action@v2
          #        with:
          #          package: knotty
          #          package_root: build
          #          maintainer: Tom Price <t0mpr1c3@gmail.com>
          #          version: ${{ steps.vars.outputs.tag }}
          #          arch: 'amd64'
          #          depends: 'libc6 (>= 2.2.1), git'
          #          desc: 'Utility for converting knitting patterns between different formats. See https://github.com/t0mpr1c3/knotty'
      - name: Archive asset
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-build
          path: build/linux/knotty-${{ steps.vars.outputs.tag }}-amd64.tgz

  upload-release:
    name: Upload Ubuntu asset
    needs: create-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Set variables
        id: vars
        run: |
          echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "racket-version=$(racket --version)" >> $GITHUB_OUTPUT
          echo "tag=$(git describe --tags)" >> $GITHUB_OUTPUT
          echo "draft=$(git describe --tags | sed -e 's/^test.*/true/;s/^v.*/false/')" >> $GITHUB_OUTPUT
      - name: Download asset
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-build
      - name: Upload asset
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.vars.outputs.tag }}
          body: ""  # release message, alternative to body_path
          draft: ${{ steps.vars.outputs.draft }}
          prerelease: false
          allowUpdates: true
          artifacts: knotty-${{ steps.vars.outputs.tag }}-amd64.tgz
          artifactContentType: executable
          replacesArtifacts: true
